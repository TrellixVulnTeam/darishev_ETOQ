<?php

namespace ContainerUCc2Q4N;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUnlockCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Dukecity\CommandSchedulerBundle\Command\UnlockCommand' shared service.
     *
     * @return \Dukecity\CommandSchedulerBundle\Command\UnlockCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/dukecity/command-scheduler-bundle/Command/UnlockCommand.php';

        $container->privates['Dukecity\\CommandSchedulerBundle\\Command\\UnlockCommand'] = $instance = new \Dukecity\CommandSchedulerBundle\Command\UnlockCommand(($container->services['doctrine'] ?? $container->getDoctrineService()), 'default', false);

        $instance->setName('scheduler:unlock');
        $instance->setDescription('Unlock one or all scheduled commands that have surpassed the lock timeout.');

        return $instance;
    }
}
